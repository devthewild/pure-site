{{setTitle     "반응형 그리드"}}
{{setSubTitle  "전부 커스텀가능한 반응형 그리드"}}
{{setActiveNav "grids"}}

{{> header}}

<div class="content">

    <h2 class="content-subhead">어떻게 Pure 그리드가 작동하는가?</h2>
    <p>
        Pure 그리드는 매우 간단하게 작동한다. <code>pure-g</code>를 행이나 "그리드"가 되고, <code>pure-u-*-*</code>는 열 혹은 "유닛"이 된다. 각각의 <code>pure-g</code>는 많은 유닛을 포함할 수 있다. 유닛들은 너비를 표현하기 위한 많은 클래스 이름들이 있다. 예를 들어, <code>pure-u-1-2</code>는 50%의 너비를, <code>pure-u-1-5</code>는 20%의 너비를 가질 것이다.
    </p>

    <p>
        Pure 그리드의 유일한 제약은 모든 "유닛"은 "그리드"의 밑에 있어야한다는 것이다. 다시 말하자면, <code>pure-u-*</code> 클래스 이름을 가진 엘리먼트는 <code>pure-g</code> 혹은 <code>pure-g-r</code> 클래스 이름을 가진 엘리먼트를 부모로 가져야한다는 것이다. 여기 3개의 열을 가진 그리드 예제가 있다.
    </p>

  {{#code}}
    {{> grids/intro}}
  {{/code}}

    <aside>
        <p>
            자세한 가이드를 원하면 YUI 웹사이트에서 <a href="http://yuilibrary.com/yui/docs/cssgrids/">CSS 그리드 문서</a>를 확인
        </p>
    </aside>


    <h2 class="content-subhead">어떻게 Pure 반응형 그리드가 작동하는가?</h2>
    <p>
        Pure 반응형 그리드는 존재하는 그리드 구현 중 최상위에 만들어졌다. <code>pure-g-r</code>(예상했듯 r은 반응형responsive을 의미)라는 클래스 이름 하나가 추가되었다. 보통 사용할 때처럼 <code>pure-g</code>를 사용하는 대신 사용할 수 있다. <code>pure-g-r</code>의 바로 밑에 있는 <code>pure-u-*-*</code>의 클래스이름을 갖는 모든 엘리먼트들은 자동적으로 반응형이 된다.
    </p>


    <h2 class="content-subhead">The HTML</h2>
    <p>
        보통 Pure 그리드를 어떻게 쓰는지 아래 첫번째 예시가 나와있다. 이 그리드들은 반응형이 아니다. 스크린 너비를 무시하고 항상 1/3의 너비다. 두번째 예시는 <code>pure-g</code> 대신 <code>pure-g-r</code>로 되어있고, 좁은 스크린 너비에서 전체의 1/3의 너비를 갖는다.
    </p>

    {{#code}}
    {{> grids/compare-nr}}
    {{/code}}

    {{#code}}
    {{> grids/compare-r}}
    {{/code}}

    <h2 class="content-subhead">기능들</h2>

    <ul class="content-spaced">
        <li>다른 스크린 크기들에 대한 미디어 쿼리 설정을 추가할 수 있다. (데스크탑, 가로 태블릿, 세로 태블릿, 폰)</li>
        <li>특정 너비보다 작아지면 엘리먼트들을 100%로 설정 (기본적으로 767px)</li>
        <li>이미지보다 작은 스크린에서는 너비 보정</li>
        <li>원하는만큼 많은 열이 가능(혹은 적게도)</li>
        <li>접두사(prefix) 설정 지원</li>
    </ul>


    <h2 class="l-centered">아래에서 직접 확인해보자!</h2>
    <h3 class="l-centered">페이지를 리사이즈하면 그리드가 편한다.</h3>

    {{> grids/four-col}}

    <h2 class="content-subhead">그리드 유닛에 padding과 border들 적용하기</h2>

    <p>
        Pure 그리드에 border와 padding을 추가하기 위해서는 두가지 선택지가 있다. 첫번째는 <code>&lt;div&gt;</code>를 각 Grid 유닛 안에 넣고 컨테이너로 스타일을 적용하는 것이다.
    </p>

    {{#code}}
    {{> grids/padding-nested}}
    {{/code}}

    <p>
        두번째 선택은 Grid 유닛에 직접적으로 border와 padding을 추가하는 것이다. 보통 레이아웃을 깨트릴 수 있는 위험이 있지만 <code>box-sizing: border-box</code>를 사용해서 이런 문제를 쉽게 피할 수 있다.
    </p>

    {{#code}}
    {{> grids/padding-box-sizing}}
    {{/code}}

    <p>
        <code>box-sizing: border-box</code>를 사용하면 마크업을 더 깔끔하게 유지할 수 있지만 두가지 사소한 약점이 있다. IE7같은 구형 브라우저들에서는 지원되지 않고, 모든 그리드 유닛의 속성에 설정하면 나중에 덮어쓰거나 해제하기 어려워진다. Pure는 그렇게 깐깐한 라이브러리가 아니므로 <code>box-sizing</code>의 기본값을 <code>content-box</code>로 남겨두고 사용자의 선택을 남겨뒀다.
    </p>

    <h2 class="content-subhead">모바일에서의 그리드</h2>
    <p>
        <code>pure-g-r</code> 클래스이름 대신 <code>pure-g</code>를 사용하면 작은 스크린에서도 그리드 유닛이 퍼지지 않는다. 폰같은 작은 스크린에서 그리드를 만드는 좋은 방법이다.
    </p>

    {{> grids/mobile-col}}


      <h2 class="content-subhead">그리드만 사용하기</h2>
      <p>
          그리드는 Pure CSS의 부분이지만, 그리드만 사용하고 싶고 다른 모듈을 사용하고 싶지 않다면 부분적으로 적용할 수 있다. 단지 <code>&lt;link&gt;</code>를 <code>&lt;head&gt;</code> 안에 추가하기만 하면 된다.
      </p>

    {{#code}}
      <link rel="stylesheet" href="http://yui.yahooapis.com/pure/{{pure_version}}/grids-min.css">
    {{/code}}

      <aside>
          <p>
                자체적으로 커스텀한 그리드를 사용하고 싶으면 <a href="http://yui.github.io/gridbuilder/">Grid Builder</a>를 사용하면 된다. CSS 결과물을 저장하고 잘 사용하길!
          </p>
      </aside>
</div>
